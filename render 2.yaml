services:
  # Backend API Service
  - type: web
    name: digiclick-ai-backend
    env: node
    plan: starter
    buildCommand: npm ci && npm run build
    startCommand: npm start
    healthCheckPath: /api/health
    envVars:
      - key: NODE_ENV
        value: production
      - key: PORT
        value: 10000
      - key: MONGODB_URI
        fromDatabase:
          name: digiclick-ai-db
          property: connectionString
      - key: JWT_SECRET
        generateValue: true
      - key: JWT_REFRESH_SECRET
        generateValue: true
      - key: EMAIL_HOST
        sync: false
      - key: EMAIL_PORT
        value: 587
      - key: EMAIL_USER
        sync: false
      - key: EMAIL_PASS
        sync: false
      - key: GOOGLE_CLIENT_ID
        sync: false
      - key: GOOGLE_CLIENT_SECRET
        sync: false
      - key: STRIPE_SECRET_KEY
        sync: false
      - key: STRIPE_WEBHOOK_SECRET
        sync: false
      - key: CORS_ORIGIN
        value: https://digiclick.ai
      - key: RATE_LIMIT_WINDOW_MS
        value: 900000
      - key: RATE_LIMIT_MAX_REQUESTS
        value: 100
    autoDeploy: true
    branch: main
    rootDir: ./backend

  # Static Site (if needed for documentation)
  - type: static_site
    name: digiclick-ai-docs
    buildCommand: npm ci && npm run build:docs
    publishPath: ./docs/dist
    pullRequestPreviewsEnabled: true
    envVars:
      - key: NODE_ENV
        value: production
    routes:
      - type: rewrite
        source: /*
        destination: /index.html

databases:
  # MongoDB Database
  - name: digiclick-ai-db
    databaseName: digiclick_ai
    user: digiclick_user
    plan: starter

  # Redis Cache (if needed)
  - name: digiclick-ai-cache
    plan: starter
